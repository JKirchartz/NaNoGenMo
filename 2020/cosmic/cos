#! /bin/bash
#
# cos.sh
#
# Copyleft (â†„) 2020 jkirchartz <me@jkirchartz.com>
#
# Distributed under terms of the NPL (Necessary Public License) license.
#

function activate {
  source ./venv/bin/activate
}
function init {
  mkdir -p cv
  git clone https://tildegit.org/cosmic/cosmic-backup.git
  cat ./cosmic-backup/gopher/**/*.txt > ./cosmic-backup/gopher/input.txt
  npx pos2tracery pos tracery/pos.json
  npx pos2tracery soundex tracery/soundex.json
  python3 -v venv ./venv/
}
function install {
  pip3 install -r requirements.txt
}
function freeze {
  pip3 freeze > requirements.txt
}
function list {
    cut -f2 cosmic-backup/gopher/listing.gophermap | awk '{print "./cosmic-backup/gopher"$0}'
}
function publish {
  scp "$1" cosmic:"~/ships/EPX\ Corazon\ 23/"
  ssh cosmic 'log -f "$1" -t "$2"' # -f <filename> -t "Title String"
}
function run {
  # https://github.com/mbartoli/docker-char-rnn
  docker run -d -v "$(pwd)"/cv:/home/char-rnn/cv -v "$(pwd)"/cosmic-backup/gopher:/home/char-rnn/data/my-training-data mbartoli/char-rnn
}

function start {
  # Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
  # https://github.com/mbartoli/docker-char-rnn
  docker start cosmic_ai
}
function gpt2 {
  echo "text analysis is online"
  echo "visit https://colab.research.google.com/drive/1VLG8e7YSEwypxU-noRNhsv5dW4NfTGce"
  echo "and create a GPT-2 model for the generator"
  echo "read more: https://medium.com/@stasinopoulos.dimitrios/a-beginners-guide-to-training-and-generating-text-using-gpt2-c2f2e1fbd10a"
}

function genrnn {
  docker run -dit -v "$(pwd)"/cv:/home/char-rnn/cv -v "$(pwd)"/cosmic-backup/gopher:/home/char-rnn/data/my-training-data mbartoli/char-rnn bash -lc "cd /home/char-rnn/ && ./th sample.lua $1"
  # docker exec -d cosmic_ai th sample.lua "$1"
}

function correct {
  ./lib/correcter.py "$1"
}

function ships {
  find cosmic-backup/gopher/* -maxdepth 1 -type d  | tr / ' '
}
function planet {
    tmux new-session\; split-window -h \; split-window -v \; resize-pane -x 70 -y 20\;./planetGen.py; kill-window
}

case $1 in
  start) activate ;;
  end)
    freeze;
    deact;
    ;;
  list) list; ;;
  ships) ships; ;;
  planet) planet; ;;
  init)
    init;
    activate;
  ;;
  correct) correct "$@"; ;;
  run) run; ;;
  train)
    # docker exec -d charnn th train.lua -data_dir data/my-training-data -rnn_size 512 -num_layers 2 -dropout 0.5
    # docker exec -d charnn th train.lua -data_dir data/my-training-data -rnn_size 127 -num_layers 2 -dropout 0.5
    docker run -dt cosmicAI th train.lua -data_dir data/my-training-data -rnn_size 512 -num_layers 2 -dropout 0.4 -seq_length 40
    ;;
  pub) publish "$@"; ;;
  gen) genrnn "$@"; ;;
  help|*)
    echo "Welcome to cos, the cosmic nanogenmo helper"
    echo "cos init        initialize virtualenv and install requirements"
    echo "cos start       start up virtualenv"
    echo "cos end         freeze requirements and deactivate virtualenv"
    echo "cos list        list all files published on cosmic.voyage in chronological order"
    echo "cos ships       list all ships"
    echo "cos gen         generate from char-rnn cv/ file"
    echo "cos pub <filename> \"Title String\""
    echo "                should be self-explanatory, but it moves a file from here to publish on cosmic"
    ;;
esac

# ft=bash
